{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Project Kapu$ta",
    "description": "API for accounting of income and expenses",
    "contact": {
      "email": "patsyuck@yahoo.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "Test server"
    },
    {
      "url": "https://localhost:4000/",
      "description": "Prod server"
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    }
  ],
  "paths": {
    "/api/transactions": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get the user transactions by the operation type",
        "parameters": [
          {
            "in": "path",
            "name": "operationType",
            "required": true,
            "type": "string",
            "description": "operation type ('income' or 'expense')"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Transaction"],
        "summary": "Add an operation to the user transactions",
        "parameters": [
          {
            "in": "path",
            "name": "operationType",
            "required": true,
            "type": "string",
            "description": "operation type ('income' or 'expense')"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddedOperation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Transaction"],
        "summary": "Delete an operation from the user transactions",
        "parameters": [
          {
            "in": "path",
            "name": "operationType",
            "required": true,
            "type": "string",
            "description": "operation type ('income' or 'expense')"
          },
          {
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string",
            "description": "operation id for deleting"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedOperation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/balance": {
      "patch": {
        "tags": ["Transaction"],
        "summary": "Renew the user balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NAME"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NAME"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "data (email and password) for registration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation (user is created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationSuccessful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (email or password is omitted)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationFailed"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (user was already created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationConflict"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "data (user email and password) for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessful"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (email or password is omitted)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationFailed"
                }
              }
            }
          },
          "401": {
            "description": "Bad request (email or password is wrong)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginFailed"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Authorization"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NAME"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NAME"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/ROUTE": {
      "METHOD": {
        "tags": [],
        "summary": "",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NAME"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NAME"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationData": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "user@ukr.net"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "VeryStrongPassword!"
          }
        }
      },
      "RegistrationSuccessful": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "created"
          },
          "contentType": {
            "type": "string",
            "description": "Data type",
            "example": "application/json"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 201
          },
          "responseBody": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "nullable": true,
                "example": null
              },
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "user@ukr.net"
                  },
                  "balance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User's balance",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      },
      "RegistrationConflict": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "contentType": {
            "type": "string",
            "description": "Data type",
            "example": "application/json"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 409
          },
          "responseBody": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message",
                "example": "Already registered"
              }
            }
          }
        }
      },
      "RegistrationFailed": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "'password' is required"
          }
        }
      },
      "LoginSuccessful": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "OK"
          },
          "contentType": {
            "type": "string",
            "description": "Data type",
            "example": "application/json"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 200
          },
          "responseBody": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token",
                "example": "xxx.yyy.zzz"
              },
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "user@ukr.net"
                  }
                }
              }
            }
          }
        }
      },
      "LoginFailed": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email or password is wrong"
          }
        }
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "error"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Status code",
            "example": 500
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "secretOrPrivateKey must have a value"
          }
        }
      },
      "Transactions": {},
      "NewOperation": {},
      "AddedOperation": {},
      "DeletedOperation": {}
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
